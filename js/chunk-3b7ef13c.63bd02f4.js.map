{"version":3,"sources":["webpack:///./src/views/QnA.vue?93b3","webpack:///src/views/QnA.vue","webpack:///./src/views/QnA.vue?58c8","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///./src/views/QnA.vue"],"names":["_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","staticStyle","model","value","callback","$$v","panel","expression","staticRenderFns","mixins","name","props","disabled","readonly","Boolean","data","content","header","nextIsActive","computed","classes","groupClasses","isDisabled","expansionPanels","isReadonly","methods","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","onClick","e","toggle","isBooted","render","h","class","String","baseMixins","isActive","expansionPanel","created","beforeDestroy","showLazyContent","directives","ripple","disableIconRotate","expandIcon","type","default","hideActions","hasMousedown","genIcon","icon","VIcon","setBackgroundColor","tabindex","on","click","mousedown","mouseup","open","provide","accordion","flat","hover","focusable","inset","popout","tile","$attrs","hasOwnProperty","Array","length","updateItem","getValue","item","nextValue","index","toggleMethod","component","VContainer","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels","VRow"],"mappings":"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","file":"js/chunk-3b7ef13c.63bd02f4.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{staticClass:\"px-16\"},[_c('v-row',{staticClass:\"my-10\",attrs:{\"justify\":\"center\"}},[_c('h3',[_vm._v(\"자주하는 질문\")])]),_c('v-row',{staticClass:\"mx-auto\",staticStyle:{\"max-width\":\"70vh\"}},[_c('v-expansion-panels',{attrs:{\"multiple\":\"\"},model:{value:(_vm.panel),callback:function ($$v) {_vm.panel=$$v},expression:\"panel\"}},[_c('v-expansion-panel',[_c('v-expansion-panel-header',[_vm._v(\"~~~ 하나요?\")]),_c('v-expansion-panel-content',[_vm._v(\" Lorem ipsum dolor sit amet consectetur adipisicing elit. Magnam, quidem laboriosam voluptates architecto qui doloribus consequatur, beatae quos eveniet natus illum ullam eius asperiores necessitatibus ducimus, fuga culpa ipsum in. \")])],1),_c('v-expansion-panel',[_c('v-expansion-panel-header',[_vm._v(\"~~~ 맞나요?\")]),_c('v-expansion-panel-content',[_vm._v(\" Lorem ipsum dolor sit amet consectetur adipisicing elit. Incidunt inventore quae quisquam optio quas dicta illum assumenda similique labore facilis, doloribus architecto fugit eum! Repellendus dolorem est nihil officiis tenetur. \")])],1),_c('v-expansion-panel',[_c('v-expansion-panel-header',[_vm._v(\"~~~ 인가요?\")]),_c('v-expansion-panel-content',[_vm._v(\" Lorem, ipsum dolor sit amet consectetur adipisicing elit. Perferendis blanditiis ea commodi aperiam assumenda quos, vel at possimus sunt tempora. Animi vero dolorum sunt nulla eligendi explicabo eaque quo asperiores. \")])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container class=\"px-16\">\n    <v-row justify=\"center\" class=\"my-10\">\n      <h3>자주하는 질문</h3>\n    </v-row>\n    <v-row style=\"max-width:70vh\" class=\"mx-auto\">\n      <v-expansion-panels v-model=\"panel\" multiple>\n        <v-expansion-panel>\n          <v-expansion-panel-header>~~~ 하나요?</v-expansion-panel-header>\n          <v-expansion-panel-content>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Magnam,\n            quidem laboriosam voluptates architecto qui doloribus consequatur,\n            beatae quos eveniet natus illum ullam eius asperiores necessitatibus\n            ducimus, fuga culpa ipsum in.\n          </v-expansion-panel-content>\n        </v-expansion-panel>\n\n        <v-expansion-panel>\n          <v-expansion-panel-header>~~~ 맞나요?</v-expansion-panel-header>\n          <v-expansion-panel-content>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Incidunt\n            inventore quae quisquam optio quas dicta illum assumenda similique\n            labore facilis, doloribus architecto fugit eum! Repellendus dolorem\n            est nihil officiis tenetur.\n          </v-expansion-panel-content>\n        </v-expansion-panel>\n\n        <v-expansion-panel>\n          <v-expansion-panel-header>~~~ 인가요?</v-expansion-panel-header>\n          <v-expansion-panel-content>\n            Lorem, ipsum dolor sit amet consectetur adipisicing elit.\n            Perferendis blanditiis ea commodi aperiam assumenda quos, vel at\n            possimus sunt tempora. Animi vero dolorum sunt nulla eligendi\n            explicabo eaque quo asperiores.\n          </v-expansion-panel-content>\n        </v-expansion-panel>\n      </v-expansion-panels>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nexport default {};\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QnA.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QnA.vue?vue&type=script&lang=js&\"","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./QnA.vue?vue&type=template&id=3f3e2896&scoped=true&\"\nimport script from \"./QnA.vue?vue&type=script&lang=js&\"\nexport * from \"./QnA.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3f3e2896\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VContainer,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VRow})\n"],"sourceRoot":""}